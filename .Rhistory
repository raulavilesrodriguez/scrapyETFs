browserName = "firefox"
)
remDr$open()
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 32768,
browserName = "firefox"
)
remDr$open()
remDr$getStatus()
remDr$navigate("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
html_source <- remDr$getPageSource()[[1]]
remDr$findElements(using = "css", value = "table")
remDr$findElements(using = "xpath", value = "//table")
tabla <- remDr$findElements(using = "xpath", value = "//table")
View(tabla)
tabla[[1]]
tabla[[1]]
tabla <- remDr$findElements(using = "class", value = "name")
tabla
tabla[[1]]
tabla[[113]]
tabla[[112]][["value"]]
tabla[[114]][[".->value"]]
tabla[[114]][[".->value"]][[3]][["ELEMENT"]]
tabla[[114]][[".self"]][[".->value"]][[3]][["ELEMENT"]]
tabla <- remDr$findElements(value = "//table")
tabla[[1]]
tabla[[1]]
tabla[[1]]$getElementAttribute('href')
tabla <- remDr$findElements(using = "class", value = 'table table-condensed')
tabla <- remDr$findElements(using = "class", value = 'table-condensed')
tabla[[1]]$getElementAttribute('href')
writeLines(html_source, "pag2.html")
html_source
tabla <- remDr$findElements(using = "css", value = 'table-condensed')
tabla[[1]]$getElementAttribute('href')
tabla <- remDr$findElements(using = "css", value = 'table')
tabla[[1]]$getElementAttribute('href')
tabla <- remDr$findElements(using = "css", value = 'href')
tabla[[1]]$getElementAttribute('href')
tabla[[1]]
tabla <- remDr$findElements(using= "xpath", value = "//table[@class = 'table table-condensed']")
tabla[[1]]$getElementAttribute('href')
tabla[[1]]
tabla[[1]]
tabla <- remDr$findElements(using= "xpath", value = "//td[@class = 'name']")
tabla[[1]]
tabla[[1]]$getElementAttribute("href")
unlist(tabla, function(x){x$getElementAttribute("href")})
unlist(sapply(tabla, function(x){x$getElementAttribute("href")}))
tabla[[1]][[".->browserName"]]
tabla[[1]]$getElementText
tabla[[1]]$getElementText()
tabla[[1]]$getElementAttribute("href")
tabla[[1]]$getElementAttribute('href')
tabla[[1]]$getClass()
tabla[[1]]$getCurrentUrl()
tabla[[1]]$findChildElement()
tabla[[1]]$findElements(value = "//a")
library(RSelenium)
vignette("basics", package = "RSelenium")
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 32770,
browserName = "firefox"
)
remDr$open()
remDr$getStatus()
remDr$navigate("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
html_source <- remDr$getPageSource()[[1]]
tabla <- html_source$findElements(using= "xpath", value = "//td[@class = 'name']")
library(rvest)
tabla <- html_source |> html_elements(xpath = '//table') |> html_table()
class(html_source)
doc <- read_html(html_source, encoding = "UTF-8")
tabla <- doc |> html_elements(xpath = '//table') |> html_table()
View(tabla)
tabla[[1]]
print(tabla)
class(tabla)
View(tabla[[1]])
links <- doc |> html_elements(xpath = "//td/a") |> html_attr("href")
links
View(lista)
lista
lista
class(links)
list(links)
links[[150]]
links[[149]]
links[[150]]
class(tabla)
library(tidyverse)
df.tabla <- tibble(
unlist(tabla)
)
View(df.tabla)
tabla[[1]]
tabla[[1]][1]
tabla[[1]][2]
tabla[[1]][3]
tabla[[1]][4]
tabla[[1]][5]
tabla[1]
tabla[1][1]
tabla[[1]]
tabla[[1]][1]
View(df.tabla)
df.tabla <- tibble(
unlist(tabla[[1]][1]),
unlist(tabla[[1]][2]),
unlist(tabla[[1]][3]),
unlist(tabla[[1]][4])
)
View(df.tabla)
links <- list(doc |> html_elements(xpath = "//td/a") |> html_attr("href"))
View(links)
links[[1]]
df.tabla <- tibble(
unlist(tabla[[1]][1]),
unlist(tabla[[1]][2]),
unlist(tabla[[1]][3]),
unlist(tabla[[1]][4]),
unlist(links)
)
links <- list(doc |> html_elements(xpath = "//table/tbody/tr/td/a") |> html_attr("href"))
df.tabla <- tibble(
unlist(tabla[[1]][1]),
unlist(tabla[[1]][2]),
unlist(tabla[[1]][3]),
unlist(tabla[[1]][4]),
unlist(links)
)
links
html_source <- remDr$getPageSource()[[1]]
source("C:/Users/bravi/projects/scrapyETFs/Selenium.R", echo=TRUE)
links[[1]]
df.tabla <- tibble(
unlist(tabla[[1]][1]),
unlist(tabla[[1]][2]),
unlist(tabla[[1]][3]),
unlist(tabla[[1]][4]),
unlist(links)
)
df.prueba <- tibble()
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(stringr)
library(purrr) # to split strings
library(hrbrthemes)
library(viridis) # pallette of colors
library(viridisLite) # pallette of colors
library(RSelenium) # to scrapy
#______SCRAPY WEB_______
# Algoritm to download all pages
set.seed(1)
url <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
data.general <- tibble(LETTERS)
padding <- c(6,4,4,2,2,6,5,5,23,2,2,9,3,2,1,3,1,2,8,2,5,5,5,5,1,1)
data.general$padding <- padding
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
View(data.general)
apply(data.general, 2, function(x){
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/")
print(s)
})
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
apply(data.general, 1, function(x){
n <- 0
while(n<x[["padding"]]){
n <- n + 1
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
}
})
class(data.general$padding)
apply(data.general, 1, function(x){
n <- 0
while(n<x[["padding"]]){
n <- n + 1
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(s)
}
})
n <- 0
apply(data.general, 1, function(x){
while(n<x[["padding"]]){
n <- n + 1
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(s)
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<x[["padding"]]){
print(n)
n <- n + 1
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(s)
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<x[["padding"]]){
print(n)
print(x[["padding"]])
n <- n + 1
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(s)
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
print(n)
print(x[["padding"]])
n <- n + 1
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(s)
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(s)
}
})
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(stringr)
library(purrr) # to split strings
library(hrbrthemes)
library(viridis) # pallette of colors
library(viridisLite) # pallette of colors
library(RSelenium) # to scrapy with Selenium Server
#______SCRAPY WEB_______
# Algoritm to download all pages
set.seed(1)
url <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
data.general <- tibble(LETTERS)
padding <- c(6,4,4,2,2,6,5,5,23,2,2,9,3,2,1,3,1,2,8,2,5,5,5,5,1,1)
data.general$padding <- padding
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
print(n)
}
})
apply(data.general, 1, function(x){
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/")
print(link)
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
print(n)
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
print(as.numeric(x[["padding"]]))
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
print(as.numeric(x[["padding"]]))
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
#link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
#print(link)
print(as.numeric(x[["padding"]]))
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
print(as.numeric(x[["padding"]]))
}
})
apply(data.general, 1, function(x){
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/")
print(link)
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
}
})
apply(data.general, 1, function(x){
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/")
print(link)
})
apply(data.general, 1, function(x){
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/")
})
apply(data.general, 1, function(x){
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/")
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
link
}
})
apply(data.general, 1, function(x){
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
}
print(x[["LETTERS"]])
})
apply(data.general, 1, function(x){
message("The scraping ETF promgram begin :)")
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
}
})
apply(data.general, 1, function(x){
print("The scraping ETF promgram begin :)")
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
}
})
apply(data.general, 1, function(x){
print(paste0("The scraping with>", x[["LETTERS"]], ":)"))
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
}
})
apply(data.general, 1, function(x){
print(paste0("The scraping with>", x[["LETTERS"]], ":)"))
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
}
x[["LETTERS"]]
})
apply(data.general, 1, function(x){
print(paste0("The scraping with>", x[["LETTERS"]], ":)"))
n <- 0
while(n<as.numeric(x[["padding"]])){
n <- n + 1
link <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/",n)
print(link)
}
})
View(df.tabla)
db.links <- tibble(
Name = character(),
Country = character(),
Exchange = character(),
Sector = character(),
Link = character()
)
View(db.links)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
library(writexl)
write_xlsx(bd.total, "./scrapy/linksTotales.xlsx")
View(bd.total)
tibble(bd.total)
bind_rows(map(bd.total, as_tibble))
db.links <- bind_rows(map(bd.total, as_tibble))
View(db.links)
colnames(db.links) <- c('Name', 'Country', 'Exchange', 'Sector', 'Link')
View(db.links)
write_xlsx(db.links, "./scrapy/linksTotales.xlsx")
func.total <- function(Link){
print(Link)
lista <- list(quintil = 'quintil1',
total_returns = 'test1',
consitent_returns = 'test2'
)
lista
}
db.links <- db.links |>
rowwise() |>
mutate(resultado = list(func.total(Link))) |>
ungroup()
View(db.links)
View(db.links[[6]][[1]])
db.links[[6]][[1]][["quintil"]]
func.total <- function(Link){
print(Link)
lista <- list(quintil = 'quintil1',
total_returns = 'test1',
consitent_returns = 'test2'
)
lista
}
db.links <- db.links |>
rowwise() |>
mutate(resultado = (func.total(Link))) |>
ungroup()
func.total <- function(Link){
print(Link)
lista <- list(quintil = 'quintil1',
total_returns = 'test1',
consitent_returns = 'test2'
)
lista
}
db.links <- db.links |>
rowwise() |>
mutate(resultado = tibble(func.total(Link))) |>
ungroup()
func.total <- function(Link){
print(Link)
lista <- list(quintil = 'quintil1',
total_returns = 'test1',
consitent_returns = 'test2'
)
lista
}
db.links <- db.links |>
rowwise() |>
mutate(resultado = list(func.total(Link))) |>
ungroup()
View(db.links)
View(db.links[[6]][[1]])
View(db.links)
func.total <- function(Link){
print(Link)
lista <- list(quintil = 'quintil1',
total_returns = 'test1',
consitent_returns = 'test2'
)
lw <- bind_rows(map(lista, as_tibble))
lw
}
db.links <- db.links |>
rowwise() |>
mutate(resultado = list(func.total(Link))) |>
ungroup()
View(db.links[[6]][[1]])
View(db.links[[6]][[2]])
func.total <- function(Link){
print(Link)
lista <- list(quintil = 'quintil1',
total_returns = 'test1',
consitent_returns = 'test2'
)
lw <- bind_cols(map(lista, as_tibble))
lw
}
db.links <- db.links |>
rowwise() |>
mutate(resultado = list(func.total(Link))) |>
ungroup()
