library(rvest)
install.packages("rvest")
install.packages("rvest")
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
View(h)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
data <- h |> html_elements(xpath = "//div/table") |> html_table()
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
datos <- h |> html_elements(xpath = '//div/table') |> html_table()
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
datos <- read_html_live(url)|>
html_elements(xpath = '//div/table') |> html_table()
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
library(tidyverse)
library(rvest)
library(httr2)
library(readxl)
library(stringr)
library(purrr) # to split strings
library(hrbrthemes)
library(viridis) # pallette of colors
library(viridisLite) # pallette of colors
#______SCRAPY WEB_______
# Algoritm to download all pages
set.seed(1)
url <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A")
h <- read_html_live(url)
data <-  html_elements(xpath = '//div/table')
data <-  h |> html_elements(xpath = '//div/table')
h[["html_elements"]]
data <-  h |> html_elements(css = 'table')
data <-  h |> html_elements()
h[["view"]]
h[["type"]]
h[["session"]]
h[["scroll_to"]]
h[["scroll_to"]]
h[["scroll_into_view"]]
h[["scroll_by"]]
h[["print"]]
h[["press"]]
h[["initialize"]]
h[["html_elements"]]
h[["get_scroll_position"]]
h[["click"]]
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
h$html_elements()
h$html_elements("table")
h$html_elements("table") |> html_table()
h$html_elements("table") |> html_text()
h$html_elements("table1") |> html_text()
h |> html_element("table")
h %>% html_element("table")
h %>% html_element("h1")
h |> html_element("h1")
h |> html_element()
h |> html_element("//div/table")
h |> html_elements("//div/table")
h |> html_elements(xpath = "//div/table")
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
View(h)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
sess$view()
sess$view()
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
url <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A")
sess <- read_html_live(url)
sess$view()
lista <- sess |> html_elements("table")
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
is_empty(lista)
class(LETTERS)
LETTERS
tibble(LETTERS)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
View(data.general)
padding <- c(6,4,4,2,2,6,5,5,23,2,2,9,3,2,1,3,1,2,8,2,5,5,5,5,1,1)
data.general$padding <- padding
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
install.packages(c("httr", "httr2"))
install.packages(c("httr", "httr2"))
install.packages(c("httr", "httr2"))
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("rvest")
install.packages("rvest")
install.packages("RSelenium")
install.packages("rvest")
install.packages("rvest")
install.packages("xml2")
install.packages("xml2")
install.packages("webdriver")
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(stringr)
library(purrr) # to split strings
library(hrbrthemes)
library(viridis) # pallette of colors
library(viridisLite) # pallette of colors
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(stringr)
library(purrr) # to split strings
library(hrbrthemes)
library(viridis) # pallette of colors
library(viridisLite) # pallette of colors
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
RSelenium::rsDriver()
source("~/.active-rstudio-document", echo=TRUE)
rem_driver$open()
library(RSelenium)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
install.packages("RSelenium")
install.packages("RSelenium")
install.packages("RSelenium")
system2(command = "wmic",
args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value')
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
View(page)
page$html_elements()
page$html_elements()
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
content(url)
write(url, "x.html")
writeBin(url, "x.html")
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
s |> html_encoding_guess()
View(s)
s[["url"]]
s[["cache"]]
s |> html_element("table")
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
rvest::LiveHTML
rvest::LiveHTML(url)
rvest::LiveHTML
install.packages("wdman")
install.packages("wdman")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
vignette("basics", package = "RSelenium")
source("C:/Users/bravi/projects/scrapyETFs/Selenium.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/Selenium.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/Selenium.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/Selenium.R", echo=TRUE)
remDr$navigate("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
html_source <- remDr$getPageSource()[[1]]
writeLines(html_source, "pag1.html")
library(RSelenium)
vignette("basics", package = "RSelenium")
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
s
?selKeys
library(RSelenium)
vignette("basics", package = "RSelenium")
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4445,
browserName = "firefox"
)
remDr$open()
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444,
browserName = "firefox"
)
remDr$open()
library(RSelenium)
vignette("basics", package = "RSelenium")
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 4444,
browserName = "firefox"
)
remDr$open()
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 32768,
browserName = "firefox"
)
remDr$open()
remDr$getStatus()
remDr$navigate("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
html_source <- remDr$getPageSource()[[1]]
remDr$findElements(using = "css", value = "table")
remDr$findElements(using = "xpath", value = "//table")
tabla <- remDr$findElements(using = "xpath", value = "//table")
View(tabla)
tabla[[1]]
tabla[[1]]
tabla <- remDr$findElements(using = "class", value = "name")
tabla
tabla[[1]]
tabla[[113]]
tabla[[112]][["value"]]
tabla[[114]][[".->value"]]
tabla[[114]][[".->value"]][[3]][["ELEMENT"]]
tabla[[114]][[".self"]][[".->value"]][[3]][["ELEMENT"]]
tabla <- remDr$findElements(value = "//table")
tabla[[1]]
tabla[[1]]
tabla[[1]]$getElementAttribute('href')
tabla <- remDr$findElements(using = "class", value = 'table table-condensed')
tabla <- remDr$findElements(using = "class", value = 'table-condensed')
tabla[[1]]$getElementAttribute('href')
writeLines(html_source, "pag2.html")
html_source
tabla <- remDr$findElements(using = "css", value = 'table-condensed')
tabla[[1]]$getElementAttribute('href')
tabla <- remDr$findElements(using = "css", value = 'table')
tabla[[1]]$getElementAttribute('href')
tabla <- remDr$findElements(using = "css", value = 'href')
tabla[[1]]$getElementAttribute('href')
tabla[[1]]
tabla <- remDr$findElements(using= "xpath", value = "//table[@class = 'table table-condensed']")
tabla[[1]]$getElementAttribute('href')
tabla[[1]]
tabla[[1]]
tabla <- remDr$findElements(using= "xpath", value = "//td[@class = 'name']")
tabla[[1]]
tabla[[1]]$getElementAttribute("href")
unlist(tabla, function(x){x$getElementAttribute("href")})
unlist(sapply(tabla, function(x){x$getElementAttribute("href")}))
tabla[[1]][[".->browserName"]]
tabla[[1]]$getElementText
tabla[[1]]$getElementText()
tabla[[1]]$getElementAttribute("href")
tabla[[1]]$getElementAttribute('href')
tabla[[1]]$getClass()
tabla[[1]]$getCurrentUrl()
tabla[[1]]$findChildElement()
tabla[[1]]$findElements(value = "//a")
library(RSelenium)
vignette("basics", package = "RSelenium")
remDr <- remoteDriver(
remoteServerAddr = "localhost",
port = 32770,
browserName = "firefox"
)
remDr$open()
remDr$getStatus()
remDr$navigate("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
html_source <- remDr$getPageSource()[[1]]
tabla <- html_source$findElements(using= "xpath", value = "//td[@class = 'name']")
library(rvest)
tabla <- html_source |> html_elements(xpath = '//table') |> html_table()
class(html_source)
doc <- read_html(html_source, encoding = "UTF-8")
tabla <- doc |> html_elements(xpath = '//table') |> html_table()
View(tabla)
tabla[[1]]
print(tabla)
class(tabla)
View(tabla[[1]])
links <- doc |> html_elements(xpath = "//td/a") |> html_attr("href")
links
View(lista)
lista
lista
class(links)
list(links)
links[[150]]
links[[149]]
links[[150]]
class(tabla)
library(tidyverse)
df.tabla <- tibble(
unlist(tabla)
)
View(df.tabla)
tabla[[1]]
tabla[[1]][1]
tabla[[1]][2]
tabla[[1]][3]
tabla[[1]][4]
tabla[[1]][5]
tabla[1]
tabla[1][1]
tabla[[1]]
tabla[[1]][1]
View(df.tabla)
df.tabla <- tibble(
unlist(tabla[[1]][1]),
unlist(tabla[[1]][2]),
unlist(tabla[[1]][3]),
unlist(tabla[[1]][4])
)
View(df.tabla)
links <- list(doc |> html_elements(xpath = "//td/a") |> html_attr("href"))
View(links)
links[[1]]
df.tabla <- tibble(
unlist(tabla[[1]][1]),
unlist(tabla[[1]][2]),
unlist(tabla[[1]][3]),
unlist(tabla[[1]][4]),
unlist(links)
)
links <- list(doc |> html_elements(xpath = "//table/tbody/tr/td/a") |> html_attr("href"))
df.tabla <- tibble(
unlist(tabla[[1]][1]),
unlist(tabla[[1]][2]),
unlist(tabla[[1]][3]),
unlist(tabla[[1]][4]),
unlist(links)
)
links
html_source <- remDr$getPageSource()[[1]]
source("C:/Users/bravi/projects/scrapyETFs/Selenium.R", echo=TRUE)
links[[1]]
df.tabla <- tibble(
unlist(tabla[[1]][1]),
unlist(tabla[[1]][2]),
unlist(tabla[[1]][3]),
unlist(tabla[[1]][4]),
unlist(links)
)
df.prueba <- tibble()
library(tidyverse)
library(rvest)
library(httr)
library(readxl)
library(stringr)
library(purrr) # to split strings
library(hrbrthemes)
library(viridis) # pallette of colors
library(viridisLite) # pallette of colors
library(RSelenium) # to scrapy
#______SCRAPY WEB_______
# Algoritm to download all pages
set.seed(1)
url <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
data.general <- tibble(LETTERS)
padding <- c(6,4,4,2,2,6,5,5,23,2,2,9,3,2,1,3,1,2,8,2,5,5,5,5,1,1)
data.general$padding <- padding
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/A/1")
View(data.general)
apply(data.general, 2, function(x){
s <- paste0("https://www.marketwatch.com/tools/markets/exchange-traded-funds/a-z/", x[["LETTERS"]], "/")
print(s)
})
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
source("C:/Users/bravi/projects/scrapyETFs/scrapy/scrapy.R", echo=TRUE)
